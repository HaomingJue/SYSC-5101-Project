# SRVN Model Description File, for file: template_1.lqn
# Generated by: lqngen, version 5.25
# For: Haomi
# Sun Apr 10 18:58:06 2022
# Invoked as: lqngen template_1.lqn
# $Id$
# ------------------------------------------------------------------------

#================= Variables ======================
$N=40
$DistributorThread=60
$Prot1Thread=150
$Prot2Thread=50
$WSThread=50
$WReplyThread=40
$CGIAppThread=50
$WSPThread=7
$CGIPThread=4
$PRThread=50
$DBProcessThread=50
$DBPThread=20
$ProtP1Thread=6
$ProtP2Thread=12



$PS=0.9
$1_PS=0.1
$PCM=0.3
$1_PCM=0.7
$K=8
$PR=0.6
$1_PR=0.4



G "Layers: 1, Customers: 1, Clients: 1, Tasks: 1, (Delay: 0), Processors: 1" 			# Model comment 
1e-05			# Convergence test value.
50			# Maximum number of iterations.
10			# Print intermediate results (see manual pages)
0.9			# Model under-relaxation ( 0.0 < x <= 1.0)
-1




#================= Processors ======================
P 0
# SYNTAX: p ProcessorName SchedDiscipline [flags]
#   ProcessorName is any string, globally unique among processors.
#   SchedDiscipline = f {fifo}
#                   | r {random}
#                   | p {premptive}
#                   | h {hol (or non-pre-emptive priority)}
#                   | s <real> {processor-sharing (or round-robin) with quantum} 
#   flags = m <int> {multiprocessor}
#         | i {infinite or delay server}
#         | R <real> {rate multiplier}
  p UP i
  p WSP f 
  p CGIP f 
  p WSDisk f
  p DBP f m 2
  p DBDisk f
  p ProtocolP1 f 
  p ProtocolP2 f m 2
-1


#================= Tasks ======================
T 0
# SYNTAX: t TaskName TaskType EntryList -1 ProcessorName [flags]
#   TaskName is any string, globally unique among tasks.
#   TaskType = r {reference or user task}
#            | n {other} 
#   flags = m <int> {multithreaded}
#         | i {infinite or delay server}
#         | z <real> {think time}
#         | <int> {task priority}
  t User r user -1 UP m $N 
  t Distributor n distributor -1 ProtocolP1 m $DistributorThread
  t Protocol1 n protocol1 -1 ProtocolP1 m $Prot1Thread %f $thruProtocol %u $uProtocol
  t Protocol2 n protocol2 -1 ProtocolP1 m $Prot2Thread 
  t WebServer n webServer -1 WSP m $WSThread %f $thruWebServer %u $uWebServer
  t WebDisk n webRorW -1 WSDisk %f $thruWDisk %u $uWDisk
  t CGIApp n cgiApp -1 CGIP m $CGIAppThread %f $thruCGIAPP %u $uCGIAPP
  t WebReply n sendStatic sendDynamic -1 WSP m $WReplyThread %f $thruWebReply %u $uWebReply
  t GetObjects n getObjects -1 WSP %f $thruGetObjects %u $uGetObjects
  t ProtocolReply n packet -1 ProtocolP2 m $PRThread %f $thruProtReply %u $uProtReplly
  t DBProcess n dbUpdate dbRead -1 DBP m $DBProcessThread %f $thruDBProcess %u $uDBProcess
  t DBOperation n read write -1 DBDisk %f $thruDBOpt %u $uDBOpt
-1


#================= Entries ======================
E 0
# SYNTAX-FORM-A: Token EntryName Value1 [Value2] [Value3] -1
#   EntryName is a string, globally unique over all entries 
#   Values are for phase 1, 2 and 3 {phase 1 is before the reply} 
#   Token indicate the significance of the Value: 
#       s - HostServiceDemand for EntryName 
#       c - HostServiceCoefficientofVariation
#       f - PhaseTypeFlag
# SYNTAX-FORM-B: Token FromEntry ToEntry Value1 [Value2] [Value3] -1
#   Token indicate the Value Definitions: 
#       y - SynchronousCalls {no. of rendezvous} 
#       F - ProbForwarding {forward to ToEntry rather than replying} 
#       z - AsynchronousCalls {no. of send-no-reply messages} 
# ---------- user ----------
  s user 0 -1
  y user distributor 1 -1 %w1 $wUser
# ---------- distributor  ----------
  A distributor analyze
# ---------- protocol1 ----------
  s protocol1 0.25 -1
  y protocol1 webServer 1 -1 %w1 $wProtocol1
# ---------- protocol2 ----------
  s protocol2 0.25 -1
  y protocol2 cgiApp 1 -1 %w1 $wProtocol2
# ---------- webserver ----------
  A webServer cache
# ---------- webDisk ----------
  s webRorW 0.1 -1
# ---------- sendPage ----------
  s sendStatic 0.8 -1
  y sendStatic packet 16 -1 %w1 $wSendStatic
  s sendDynamic 0.8 -1
  y sendDynamic getObjects 8 -1
  y sendDynamic packet 40 -1
  s getObjects 1 -1
  y getObjects webRorW 0.2 -1
# ---------- protocol Reply ----------
  s packet 0.25 -1
# ---------- CGI Application ----------
  A cgiApp cgiStart
# ---------- CGI Application Database ----------  
  s dbUpdate 30 -1
  y dbUpdate read 2 -1
  y dbUpdate write 4 -1
  s dbRead 20 -1
  y dbRead read 4 -1
  s read 0.1 -1
  s write 0.1 -1
-1


#================= Activities ======================
A Distributor
	s analyze 1
	s staticPage 0
	y staticPage protocol1 1
	s cgiDrive 0
	y cgiDrive protocol2 1
	s distributeEnd 0
:
	analyze -> (0.9)staticPage + (0.1)cgiDrive;
	staticPage + cgiDrive -> distributeEnd;
	distributeEnd[distributor]
-1

A WebServer
	s cache 1
	s diskFetch 1
	y diskFetch webRorW 3
	y diskFetch sendStatic 1 
	s cacheEnd 0
	y cacheEnd sendStatic 1
	s webServerEnd 0
:
	cache -> (0.3)diskFetch + (0.7)cacheEnd;
	cacheEnd + diskFetch -> webServerEnd;
	webServerEnd[webServer]
-1

A CGIApp
	s cgiStart 0
	s procData 15 
	y procData dbUpdate 1.7
	y procData sendStatic 1
	s cdPage 5
	y cdPage dbRead 4.3
	y cdPage sendDynamic 1
	s cgiAppEnd 0
	#s cgiEnd 0
	#y cgiEnd sendStatic 1
:
	cgiStart -> (0.6)procData + (0.4)cdPage;
	procData + cdPage -> cgiAppEnd;
	cgiAppEnd[cgiApp]
-1

#================= Observations ======================
R 0
$0=$N

$thruProtocol 
$thruWebServer
$thruWDisk
$thruCGIAPP
$thruWebReply
$thruGetObjects
$thruProtReply
$thruDBProcess
$thruDBOpt

$N
$uProtocol
$uWebServer
$uWDisk
$uWebReply
$uGetObjects
$uProtReplly
$uDBProcess
$uDBOpt

$N
$wUser
$wProtocol
$wSendStatic

-1
